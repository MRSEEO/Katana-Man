[gd_scene load_steps=15 format=2]

[ext_resource path="res://player.tscn" type="PackedScene" id=1]
[ext_resource path="res://point_cursor.gd" type="Script" id=4]
[ext_resource path="res://enemy.tscn" type="PackedScene" id=6]
[ext_resource path="res://unknown2.png" type="Texture" id=7]
[ext_resource path="res://images/point.png" type="Texture" id=8]
[ext_resource path="res://main.gd" type="Script" id=10]

[sub_resource type="Shader" id=30]
code = "shader_type canvas_item;

uniform int mode = 0;

void fragment() {
	vec4 px = texture(SCREEN_TEXTURE, SCREEN_UV);
	if (mode==1) { px = px.gbra; }
	if (mode==2) { px = px.brga; }
	if (mode==3) { px = px.bgra; }
	COLOR = vec4(px.rgb,1.0);
}"

[sub_resource type="ShaderMaterial" id=31]
shader = SubResource( 30 )
shader_param/mode = 2

[sub_resource type="Animation" id=33]
resource_name = "hide"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Animation" id=32]
resource_name = "show"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=28]
resource_name = "!can_place"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.568627, 0.254902, 0.254902, 1 ) ]
}

[sub_resource type="Animation" id=27]
resource_name = "can_place"
length = 0.2
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0.254902, 0.568627, 0.356863, 1 ) ]
}

[sub_resource type="Animation" id=29]
resource_name = "placed"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0.890196, 0.94902, 0.901961, 1 ), Color( 0.254902, 0.568627, 0.356863, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 266.667, 266.667 )

[node name="main" type="Node2D"]
script = ExtResource( 10 )

[node name="player" parent="." instance=ExtResource( 1 )]

[node name="invertion" type="CanvasLayer" parent="."]
layer = 10

[node name="invert" type="ColorRect" parent="invertion"]
self_modulate = Color( 1, 1, 1, 0 )
material = SubResource( 31 )
margin_left = -504.0
margin_top = -328.0
margin_right = 4304.0
margin_bottom = 2312.0
__meta__ = {
"_edit_lock_": true
}

[node name="anim" type="AnimationPlayer" parent="invertion/invert"]
anims/hide = SubResource( 33 )
anims/show = SubResource( 32 )

[node name="point_cursor" type="Node2D" parent="."]
scale = Vector2( 0.03, 0.03 )
script = ExtResource( 4 )
__meta__ = {
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="point_cursor"]
self_modulate = Color( 0.254902, 0.568627, 0.356863, 1 )
position = Vector2( 7.62939e-06, 7.62939e-06 )
scale = Vector2( 21.3333, 21.3333 )
texture = ExtResource( 8 )

[node name="anim" type="AnimationPlayer" parent="point_cursor/Sprite"]
autoplay = "can_place"
anims/!can_place = SubResource( 28 )
anims/can_place = SubResource( 27 )
anims/placed = SubResource( 29 )

[node name="Area2D" type="Area2D" parent="point_cursor"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="point_cursor/Area2D"]
position = Vector2( -3.17891e-05, 3.17891e-05 )
shape = SubResource( 12 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.5, 0.5 )
__meta__ = {
"_edit_lock_": true
}

[node name="wall" type="StaticBody2D" parent="."]
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="wall" type="Area2D" parent="wall" groups=["wall"]]

[node name="CollisionShape2D2" type="CollisionPolygon2D" parent="wall/wall"]
position = Vector2( -480, -270 )
scale = Vector2( 1.07143, 1.05469 )
polygon = PoolVector2Array( -29.8666, 559.406, 918.399, 559.406, 925.865, -47.4073, 440.533, -47.4073, 440.533, 43.6147, 455.466, 43.6147, 455.466, 66.3702, 806.399, 66.3702, 806.399, 430.458, 455.466, 430.458, 454.015, 452.762, 418.133, 453.214, 418.133, 430.458, 74.6666, 430.458, 74.6666, 66.3702, 418.133, 66.3702, 418.133, 43.6147, 433.066, 43.6147, 433.066, -47.4073, -29.8666, -47.4073 )

[node name="CollisionShape2D3" type="CollisionPolygon2D" parent="wall"]
position = Vector2( -480, -270 )
scale = Vector2( 1.07143, 1.05469 )
polygon = PoolVector2Array( -29.8666, 559.406, 918.399, 559.406, 925.865, -47.4073, 440.533, -47.4073, 440.533, 43.6147, 455.466, 43.6147, 455.466, 66.3702, 806.399, 66.3702, 806.399, 430.458, 455.466, 430.458, 454.015, 452.762, 418.133, 453.214, 418.133, 430.458, 74.6666, 430.458, 74.6666, 66.3702, 418.133, 66.3702, 418.133, 43.6147, 433.066, 43.6147, 433.066, -47.4073, -29.8666, -47.4073 )

[node name="enemy" parent="." instance=ExtResource( 6 )]

[node name="enemy2" parent="." instance=ExtResource( 6 )]
position = Vector2( -192, 15 )

[node name="enemy3" parent="." instance=ExtResource( 6 )]
position = Vector2( -8, -128 )

[node name="background" type="Sprite" parent="."]
position = Vector2( 2.0504e-05, 0 )
scale = Vector2( 5.45455, 4.25 )
z_index = -3
texture = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true
}

[connection signal="area_entered" from="point_cursor/Area2D" to="point_cursor" method="_on_Area2D_area_entered"]
[connection signal="area_exited" from="point_cursor/Area2D" to="point_cursor" method="_on_Area2D_area_exited"]
